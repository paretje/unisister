#!/usr/bin/python3
# Unisister
# Copyright: (C) 2013-2014 Online - Urbanus
# Website: http://www.Online-Urbanus.be
# Last modified: 26/10/2014 by Paretje

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import config
import backends

import zope.event

from gi.repository import GObject
from gi.repository import Notify

import os
import configparser
import sys

import gettext
import locale

class UnisisterModel:
	def __init__(self, sync_config):
		self.sync_config = sync_config
		self.last_sync = {}
		self.busy = set()
		
		zope.event.subscribers.append(self.set_done)
	
	def set_done(self, state):
		if state.code != 'started':
			self.busy.remove(state.sync)

def show_message(title, description, icon=None):
	Notify.Notification.new(title, description, icon).show()

# TODO: test if there is any configuration
def parse_config():
	config_parser = configparser.ConfigParser(allow_no_value=True)
	config_parser.read(os.path.expanduser(config.SYNCS))
	sync_config = {}
	for section in config_parser.sections():
		sync_config[section] = dict(config_parser.items(section))
		for (key, value) in sync_config[section].items():
			if value == '':
				sync_config[section][key] = None
			elif value.isdecimal():
				sync_config[section][key] = int(value)
	return sync_config

def set_localisation():
	# Code based on the code in system-config-printer v1.3.7
	try:
		locale.setlocale (locale.LC_ALL, "")
	except locale.Error:
		os.environ['LC_ALL'] = 'C'
		locale.setlocale (locale.LC_ALL, "")

	gettext.textdomain('unisister')
	gettext.bindtextdomain('unisister', config.LOCALEDIR)

if __name__ == "__main__":
	set_localisation()
	sync_config = parse_config()
	model = UnisisterModel(sync_config)
	controller = backends.UnisisterBackendsController(model)

	# Enable thread support for PyGObject
	GObject.threads_init()

	Notify.init("Unisister")

	if len(sys.argv) > 1 and sys.argv[1] == '--no-gui':
		import atexit

		controller.start_timer()
		atexit.register(Notify.uninit)
	else:
		import gui
		from gi.repository import Gtk

		zope.event.subscribers.append(gui.show_state_message)
		status = gui.UnisisterStatusIcon(model, controller)
		Gtk.main()
		Notify.uninit()
